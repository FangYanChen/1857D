from collections import defaultdict
 
def reset(n):
    global vis, parent, evens
    vis = [0] * (n + 1)
    parent = [-1] * (n + 1)
    evens = 0
 
def dfs(u):
    global evens
    vis[u] = 1
    cnt = 1
    
    for nd in graph[u]:
        if nd == parent[u]:
            continue
        
        if not vis[nd]:
            parent[nd] = u
            cnt += dfs(nd)
    
    vis[u] = 2
    if cnt % 2 == 0:
        evens += 1  
    return cnt
 
 
n = int(input())
graph = defaultdict(list)
 
for _ in range(n - 1):
    a, b = map(int, input().split())
    graph[a].append(b)
    graph[b].append(a)
 
if n % 2 == 1:
    print(-1)
    exit()
 
reset(n)
 
for i in range(1, n + 1):
    if vis[i] == 0:
        dfs(i)
 
print(evens - 1)
